name: Deploy AWS Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set timezone to Asia/Seoul
        run: sudo timedatectl set-timezone Asia/Seoul

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Create Firebase Key File
        run: echo "${{secrets.FIREBASE_KEY_JSON}}" > src/main/resources/moodwriterFirebaseKey.json

      - name: Build with Gradle
        run: ./gradlew buildZip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload Zip to S3
        run: aws s3 cp build/distributions/mood-writer-0.0.1-SNAPSHOT.zip s3://${{ secrets.S3_BUCKET_NAME }}/mood-writer-0.0.1-SNAPSHOT.zip

      - name: Deploy to AWS Lambda
        env:
          AWS_LAMBDA_FUNCTION_NAME: ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }}
        run: |
          aws lambda update-function-code --function-name "$AWS_LAMBDA_FUNCTION_NAME" \
            --s3-bucket ${{ secrets.S3_BUCKET_NAME }} \
            --s3-key mood-writer-0.0.1-SNAPSHOT.zip

          # ✅ Lambda 업데이트가 완료될 때까지 계속 상태 확인
          echo "Checking Lambda update status..."
          while true; do
            STATUS=$(aws lambda get-function-configuration --function-name "$AWS_LAMBDA_FUNCTION_NAME" --query "LastUpdateStatus" --output text)
            if [ "$STATUS" == "Successful" ]; then
              echo "✅ Lambda function code update completed successfully."
              break
            elif [ "$STATUS" == "Failed" ]; then
              echo "❌ Lambda function code update failed."
              exit 1
            else
              echo "⏳ Lambda function is still updating. Waiting for 5 seconds..."
              sleep 5
            fi
          done
      

      - name: Update Lambda Environment Variables
        env:
          AWS_LAMBDA_FUNCTION_NAME: ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }}
        run: |
          aws lambda update-function-configuration --function-name "$AWS_LAMBDA_FUNCTION_NAME" \
            --environment "Variables={
              SPRING_PROFILES_ACTIVE=prod,
              S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }},
              JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }},
              OPEN_AI_URL=${{ secrets.OPEN_AI_URL }},
              OPEN_AI_SECRET_KEY=${{ secrets.OPEN_AI_SECRET_KEY }},
              RABBIT_MQ_HOST=${{ secrets.RABBIT_MQ_HOST }},
              RABBIT_MQ_USERNAME=${{ secrets.RABBIT_MQ_USERNAME }},
              RABBIT_MQ_PASSWORD=${{ secrets.RABBIT_MQ_PASSWORD }},
              MYSQL_URL=${{ secrets.MYSQL_URL }},
              MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }},
              MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }},
              REDIS_HOST=${{ secrets.REDIS_HOST }},
              NOTIFICATION_SENDER=${{ secrets.NOTIFICATION_SENDER }},
              FIREBASE_KEY_PATH=${{ secrets.FIREBASE_KEY_PATH }}
            }"